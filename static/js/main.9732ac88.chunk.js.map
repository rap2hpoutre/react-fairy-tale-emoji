{"version":3,"sources":["helpers/english.js","tale.js","App.js","serviceWorker.js","index.js"],"names":["wordHerHis","g","wordSheHe","tale","heroes","shuffle","name","gender","img","foods","animals","locations","text","_s","choices","map","hero","concat","state","s","story","Object","toConsumableArray","food","location","animal","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","_e","c","setState","objectSpread","items","current","react_default","a","createElement","className","_this2","length","button","item","onClick","e","key","Component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9732ac88.chunk.js","sourcesContent":["export const wordHerHim = (g) => g === 'f' ? 'her' : 'him'\nexport const wordHerHis = (g) => g === 'f' ? 'her' : 'his'\nexport const wordSheHe = (g) => g === 'f' ? 'she' : 'he'\n","import shuffle from 'n-shuffle';\nimport { wordHerHis, wordSheHe } from './helpers/english';\n\nexport default () => {\n  const heroes = shuffle([\n    { name: 'ghost', gender: 'm', img: '👻' },\n    { name: 'clown', gender: 'm', img: '🤡' },\n    { name: 'robot', gender: 'm', img: '🤖' },\n    { name: 'martian', gender: 'm', img: '👽' },\n    { name: 'farmer', gender: 'f', img: '👩‍🌾' },\n    { name: 'princess', gender: 'f', img: '👸' }\n  ]);\n\n  const foods = shuffle([\n    { name: 'poultry leg', img: '🍗' },\n    { name: 'broccoli', img: '🥦' },\n    { name: 'pretzel', img: '🥨' },\n    { name: 'taco', img: '🌮' },\n    { name: 'hamburger', img: '🍔' },\n    { name: 'bento box', img: '🍱' },\n    { name: 'baby bottle', img: '🍼' }\n  ]);\n\n  const animals = shuffle([\n    { name: 'gorilla', img: '🦍' },\n    { name: 'wolf', img: '🐺' },\n    { name: 'dragon', img: '🐉' },\n    { name: 'snail', img: '🐌' },\n    { name: 'T-Rex', img: '🦖' },\n    { name: 'rooster', img: '🐓' }\n  ]);\n\n  const locations = shuffle([\n    { name: 'through the forest', img: '🌲' },\n    { name: 'in the meadow', img: '☘️' },\n    { name: 'near the rainbow', img: '🌈' },\n    { name: 'by the sea', img: '🌊' },\n    { name: 'in the fields', img: '🌾' },\n    { name: 'under the volcano', img: '🌋' },\n    { name: 'on the other side of the mountain', img: '🏔' }\n  ]);\n\n  return [\n    {\n      text: _s => 'One upon a time, there was...',\n      choices: _s =>\n        [heroes[0], heroes[1]].map(hero => ({\n          text: _s => `A ${hero.name}`,\n          img: _s => hero.img,\n          state: s => ({\n            hero,\n            story: [...s.story, `Once upon a time, there was a ${hero.name}.`]\n          })\n        }))\n    },\n    {\n      text: s =>\n        `The ${s.hero.name} lived with ${wordHerHis(s.hero.gender)} mother.`\n    },\n    {\n      text: s =>\n        `One day, ${wordHerHis(s.hero.gender)} mother says: \"Take this...\"`,\n      choices: _s =>\n        [foods[0], foods[1]].map(food => ({\n          text: _s => food.name,\n          img: _s => food.img,\n          state: s => ({\n            food,\n            story: [\n              ...s.story,\n              `One day, ${wordHerHis(s.hero.gender)} mother says: ` +\n                `\"Take this ${food.name} to your grandmother. ` +\n                `She is ill and weak.\"`\n            ]\n          })\n        }))\n    },\n    {\n      text: s =>\n        `The ${s.hero.name} set out immediately to go to ` +\n        `${wordHerHis(s.hero.gender)} grandmother, ` +\n        `who lived...`,\n        choices: _s =>\n        [locations[0], locations[1]].map(location => ({\n          text: _s => location.name,\n          img: _s => location.img,\n          state: s => ({\n            location,\n            story: [\n              ...s.story,\n              `The ${s.hero.name} set out immediately to go to ` +\n                `${wordHerHis(s.hero.gender)} grandmother, ` +\n                `who lived ${location.name}`\n            ]\n          })\n        }))\n    },\n    {\n      text: s =>\n        `As ${wordSheHe(s.hero.gender)} was going through the wood, ` +\n        `${wordSheHe(s.hero.gender)} met with the...`,\n      choices: _s =>\n        [animals[0], animals[1]].map(animal => ({\n          text: _s => animal.name,\n          img: _s => animal.img,\n          state: s => ({\n            animal,\n            story: [\n              ...s.story,\n              `As ${wordSheHe(s.hero.gender)} was going through the wood, ` +\n                `${wordSheHe(s.hero.gender)} met with the ${animal.name}!`\n            ]\n          })\n        }))\n    },\n    {\n      text: s => `The ${s.animal.name} says: ` +\n      `\"What are you doing out here, little ${s.hero.name}?\"`\n    },\n    {\n      text: s => `The ${s.hero.name} answered: ` +\n      `\"I'm on my way to see my Grandma who lives ${s.location.name}\"`\n    }\n    /*\nIt was not long before the wolf arrived at the old woman’s house. He knocked at the door.\n    */\n  ];\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport tale from './tale';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.items = tale();\n    this.state = {\n      current: 0,\n      story: []\n    };\n  }\n\n  handleClick = (_e, c) => {\n    if (c) {\n      this.setState({ ...c.state(this.state) });\n    } else {\n      const story = [...this.state.story, this.items[this.state.current].text(this.state)];\n      this.setState({ story  });\n    }\n    this.setState({ current: this.state.current + 1 });\n  };\n\n  story = () => this.state.story.map(s => <p className=\"story\"><i>{s}</i></p>);\n\n  current() {\n    if (this.state.current === this.items.length) {\n      return <p>The end.</p>;\n    }\n    const item = this.items[this.state.current];\n    const text = item.text(this.state);\n    let button;\n    if (item.choices) {\n      button = item.choices(this.state).map(c => (\n        <button onClick={e => this.handleClick(e, c)} key={c.text(this.state)}>\n          {c.text(this.state)}\n          {c.img ? <span>{c.img()}</span> : <span />}\n        </button>\n      ));\n    } else {\n      button = <button onClick={this.handleClick}>Next</button>;\n    }\n    return (\n      <div>\n        <p>{text}</p>\n        {button}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Fairy tale</h1>\n        </header>\n        {this.story()}\n        {this.current()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}